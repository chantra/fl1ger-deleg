



dnsop                                                           T. April
Internet-Draft                                                          
Intended status: Informational                                 P. Špaček
Expires: 21 July 2024                                                ISC
                                                                R. Weber
                                                     Akamai Technologies
                                                             D. Lawrence
                                                              Salesforce
                                                         18 January 2024


       Extensible Delegation for DNS -- trust anchor side-loading
                    draft-dnsop-deleg-dnssec-latest

Abstract

   This document describes how to use new delegation mechanism DELEG in
   AliasMode [I-D.draft-dnsop-deleg] to offload keys into a different
   DNS subtree.  This creates chain of trust which goes "sideways",
   enables sharing keys among multiple zones, and allows DNS operators
   to manage keys without involving parent zones.

Discussion Venues

   This note is to be removed before publishing as an RFC.

   Source for this draft and an issue tracker can be found at
   https://github.com/fl1ger/deleg.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 21 July 2024.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
     1.1.  Terminology
     1.2.  Reasoning for introducing new form of chain of trust
     1.3.  Introductory Examples
       1.3.1.  Multiple Service Providers
     1.4.  Deployment Considerations
       1.4.1.  Rollout
   2.  DNSSEC and DELEG
   3.  Privacy Considerations
   4.  Security Considerations
     4.1.  Resolution procedure
   5.  IANA Considerations
     5.1.  New SvcParamKey Values
   6.  Informative References
   Appendix A.  Acknowledgments
   Appendix B.  TODO
   Appendix C.  Change Log
   Contributors
   Authors' Addresses

1.  Introduction

   Traditionally DNSSEC [RFC4033] uses top-down chain of trust, which
   requires individual DS RRs in the parent zone and this must match
   DNSKEY in the child zone.  This document describes how to use new
   delegation mechanism DELEG in AliasMode to offload keys into a
   different subtree, which has several implications.

   The DELEG record leverages the Service Binding (SVCB) record format
   defined in [RFC9460], using a subset of the already defined service
   parameters as well as new parameters described here.

   By using an AliasMode inherited from SVCB, DELEG also allows a level
   of indirection to ease the operational maintenance of multiple zones
   by the same operator.  For example, an operator can have numerous
   customer domains sharing the same DNSSEC public keys.  These keys can
   updated without intervention from the customers.  Most notably, we
   expect that this provides a method for addressing the long-standing
   problem operators have with maintaining DS records on behalf of their
   customers.

1.1.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   Terminology regarding the Domain Name System comes from [BCP219],
   with addition terms defined here:

   *  [tbd]

   *  [tbd]

1.2.  Reasoning for introducing new form of chain of trust

   *  DNS operators don’t have a formal role in the current system.
      Consequently, registries/registrars generally don’t talk to
      operators and users must act as go-between and make technical
      changes they don’t understand.

      -  Asking domain owners to add or modify DS records when rolling
         DNSSEC keys etc.  This is very inflexible when an operator
         needs to make technical changes, and it's assumed that it might
         be one of reasons why DNSSEC deployment on the authoritative
         side is low.

1.3.  Introductory Examples

   In this example, the parent zone is using DELEG in AliasMode as a
   level of indirection.  Essentially the parent points DELEG-supporting
   resolvers to different subtree where actual parameters are stored,
   instead of storing all parameters directly in the parent zone.

   example.com.  86400  IN DELEG 0     config.operator.example.
   example.com.  86400  IN NS          ns1.operator.example.

   The NS record serves as compatibility shim for old clients.  The
   above DELEG record indicates to the new client that the actual
   configuration for the example.com zone can be found at
   config.operator.example.

   The operator.example authoritative server may return the following
   SVCB records in response to a query as directed by the above records.

   config.operator.example. 3600    IN SVCB ns1.operator.example. (
                   ipv4hint=192.0.2.54,192.0.2.56
                   ipv6hint=2001:db8:2423::3,2001:db8:2423::4
                   sharedds="12345 13 1 DSFDSAFDSAFVCFSGFDSGDSAGFSA" )

   Later sections of this document will go into more detail on the
   resolution process using these records.

1.3.1.  Multiple Service Providers

   TODO:

   Some zone owners may wish to use multiple providers to serve their
   zone, in which case multiple DELEG AliasMode records can be used.  In
   the event that multiple DELEG AliasMode records are encountered, the
   resolver SHOULD treat those as a union the same way this is done with
   NS records, picking one at random for the first lookup and eventually
   discovering the others.  How exactly DNS questions are directed and
   split between configuration sets is implementation specific:

   example.com.    86400    IN  DELEG     0   config1.example.net.
   example.com.    86400    IN  DELEG     0   config1.example.org.

   DRAFT NOTE: SVCB says that there "SHOULD only have a single RR".
   This ignores that but keep the randomization part.  Section 2.4.2 of
   SVCB

1.3.1.1.  "sharedds"

   The "sharedds" SvcParamKey is a delegation parameter representing a
   modified DS RRset.  For usage notes, see Section 2.

   The SvcParamValue is a non-empty value-list.  The presentation and
   wire format of each value is the same as the presentation and wire
   format described for the DS record as defined in [RFC4034], sections
   5.3 and 5.1 respectively.  When computing the digest, the DNSKEY
   Owner Name is always set to "." (i.e., the root), because this DS
   record approves the use of the specified DNSKEY on any zone that is
   delegated to this endpoint.

   If the "sharedds" SvcParamKey is omitted, the applicable DS RRset is
   the one that is present at the zone cut, if any.

   As a special case, the presentation value "disabled", corresponding
   to an empty value in wire format, indicates that there is no DS RRset
   for resolution to this delegated endpoint, even if a DS RRset is
   present at the zone cut.

   This SvcParam is "automatically mandatory" (i.e. non-ignorable) in
   DELEG for validating resolvers.

1.4.  Deployment Considerations

   The DELEG and SVCB records intends to replace the NS record while
   also adding additional functionality in order to support additional
   transports for the DNS.  Below are discussions of considerations for
   deployment.

1.4.1.  Rollout

   DNSSEC chain of trust provided by the "sharedds" parameter will be
   taken into account only by supporting resolvers validators.  If the
   legacy DS record is not present in the parent zone the zone will be
   in DNSSEC insecure state for legacy resolvers and validators.  In
   some cases, this may be a desired quality, e.g. because introducing
   DS into the parent zone is operationally too complicated, but it
   should be noted by zone owners and operators.

2.  DNSSEC and DELEG

   TODO: Should DS at parent serve as fallback if the SVCB does not have
   sharedds=? What if there is DS at the parent side and sharedds= in
   the SVCB?  If there are any DS records on the same name as a DELEG
   record, ...

   When using the "sharedds" SvcParamKey, each DELEG record MAY indicate
   different DS contents.  This allows delegation of a zone to multiple
   signers with different DNSKEYs, and allows those configurations to
   change independently.  Note that a zone is only as secure as its
   least secure "sharedds" SvcParam.

3.  Privacy Considerations

   All of the information handled or transmitted by this protocol is
   public information published in the DNS.

4.  Security Considerations

   TODO: Fill this section out

4.1.  Resolution procedure

5.  IANA Considerations

5.1.  New SvcParamKey Values

   This document defines new SvcParamKey values in the "Service Binding
   (SVCB) Parameter Registry".

          +=============+==========+==========+=================+
          | SvcParamKey | NAME     | Meaning  | Reference       |
          +=============+==========+==========+=================+
          | TBD2        | sharedds | DS RRset | (This Document) |
          +-------------+----------+----------+-----------------+

                                  Table 1

6.  Informative References

   [BCP219]   Hoffman, P., Sullivan, A., and K. Fujiwara, "DNS
              Terminology", BCP 219, RFC 8499, January 2019.

              <https://www.rfc-editor.org/info/bcp219>

   [I-D.draft-dnsop-deleg]
              "*** BROKEN REFERENCE ***".

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC4033]  Arends, R., Austein, R., Larson, M., Massey, D., and S.
              Rose, "DNS Security Introduction and Requirements",
              RFC 4033, DOI 10.17487/RFC4033, March 2005,
              <https://www.rfc-editor.org/rfc/rfc4033>.

   [RFC4034]  Arends, R., Austein, R., Larson, M., Massey, D., and S.
              Rose, "Resource Records for the DNS Security Extensions",
              RFC 4034, DOI 10.17487/RFC4034, March 2005,
              <https://www.rfc-editor.org/rfc/rfc4034>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC9460]  Schwartz, B., Bishop, M., and E. Nygren, "Service Binding
              and Parameter Specification via the DNS (SVCB and HTTPS
              Resource Records)", RFC 9460, DOI 10.17487/RFC9460,
              November 2023, <https://www.rfc-editor.org/rfc/rfc9460>.

Appendix A.  Acknowledgments

   This draft is heavily based on past work (draft-tapril-ns2) done by
   Tim April and thus extends the thanks to the people helping on this
   which are: John Levine, Erik Nygren, Jon Reed, Ben Kaduk, Mashooq
   Muhaimen, Jason Moreau, Jerrod Wiesman, Billy Tiemann, Gordon Marx
   and Brian Wellington.

Appendix B.  TODO

   RFC EDITOR:  PLEASE REMOVE THE THIS SECTION PRIOR TO PUBLICATION.

   *  Write a security considerations section

   *  Add the dohpath references RFC

   *  Define and give examples for DNSSEC svcparams

   *  worked out resolution example including AliasMode delegation

   *  DoH URI teamplte does not include post

Appendix C.  Change Log

   RFC EDITOR:  PLEASE REMOVE THE THIS SECTION PRIOR TO PUBLICATION.

   ~~~ 01234567890123456789012345678901234567890123456789012345678901234
   567891

Contributors

   Christian Elmerot
   Cloudflare
   Email: christian@elmerot.se


   Edward Lewis
   ICANN
   Email: edward.lewis@icann.org


   Shumon Huque
   Salesforce
   Email: shuque@gmail.com


   Klaus Darilion
   nic.at
   Email: klaus.darilion@nic.at


   Libor Peltan
   CZ.nic
   Email: libor.peltan@nic.cz


   Vladimír Čunát
   CZ.nic
   Email: vladimir.cunat@nic.cz


   Shane Kerr
   NS1
   Email: shane@time-travellers.org


   David Blacka
   Verisign
   Email: davidb@verisign.com


   George Michaelson
   APNIC
   Email: ggm@algebras.org


   Ben Schwartz
   Meta
   Email: bemasc@meta.com


   Jan Včelák
   NS1
   Email: jvcelak@ns1.com


   Peter van Dijk
   PowerDNS
   Email: peter.van.dijk@powerdns.com


   Philip Homburg
   NLnet Labs
   Email: philip@nlnetlabs.nl


   Erik Nygren
   Akamai Technologies
   Email: erik+ietf@nygren.org


   Vandan Adhvaryu
   Team Internet
   Email: vandan@adhvaryu.uk


   Manu Bretelle
   Meta
   Email: chantr4@gmail.com


Authors' Addresses

   Tim April
   Email: ietf@tapril.net


   Petr Špaček
   ISC
   Email: pspacek@isc.org


   Ralf Weber
   Akamai Technologies
   Email: rweber@akamai.com


   David C Lawrence
   Salesforce
   Email: tale@dd.org
